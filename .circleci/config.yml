skip-job-if-frontend-unchanged: &skip-job-if-frontend-unchanged
  run:
    name: Skipping job if nothing has changed since last build
    command: ~/repo/.circleci/skip-job-if-directory-unchanged.sh ~/repo/{.circleci,frontend}

skip-job-if-backend-unchanged: &skip-job-if-backend-unchanged
  run:
    name: Skipping job if nothing has changed since last build
    command: ~/repo/.circleci/skip-job-if-directory-unchanged.sh ~/repo/{.circleci,backend,*.gradle,gradle*}

version: 2
jobs:
  build-lambdas:
    docker:
      - image: circleci/openjdk:8-jdk

    working_directory: ~/repo

    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - checkout

      - *skip-job-if-backend-unchanged

      - restore_cache:
          keys:
          - v2-dependencies-{{ checksum "build.gradle" }}-{{ checksum "backend/lambda/build.gradle" }}
          - v2-dependencies-

      - run: ./gradlew --no-daemon :backend:lambda:build

      - save_cache:
          paths:
            - ~/.gradle
          key: v2-dependencies-{{ checksum "build.gradle" }}-{{ checksum "backend/lambda/build.gradle" }}

      - persist_to_workspace:
          root: backend
          paths:
            - lambda/build/distributions

  test-event-store:
    machine:
      docker_layer_caching: true

    working_directory: ~/repo

    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - checkout

      - run:
          name: Skipping job if nothing has changed since last build
          command: ~/repo/.circleci/skip-job-if-directory-unchanged.sh ~/repo/{.circleci,backend/event-store,*.gradle,gradle*}

      - restore_cache:
          keys:
          - v2-dependencies-{{ checksum "build.gradle" }}-{{ checksum "backend/event-store/build.gradle" }}
          - v2-dependencies-

      - run: ./gradlew --no-daemon --info :backend:event-store:test

      - save_cache:
          paths:
            - ~/.gradle
          key: v2-dependencies-{{ checksum "build.gradle" }}-{{ checksum "backend/event-store/build.gradle" }}

      - store_test_results:
          path: backend/event-store/build/test-results

  deploy-lambdas:
    docker:
      - image: circleci/node:10

    working_directory: ~/repo/backend

    environment:
      TERM: dumb

    steps:
      - checkout:
          path: ~/repo

      - *skip-job-if-backend-unchanged

      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - v2-yarn-packages-toplevel-{{ .Branch }}-{{ checksum "yarn.lock" }}
            - v2-yarn-packages-toplevel-{{ .Branch }}
            - v2-yarn-packages-toplevel-master

      - run:
          name: Install Dependencies
          command: yarn install

      - save_cache:
          name: Save Yarn Package Cache
          key: v2-yarn-packages-toplevel-{{ .Branch }}-{{ checksum "yarn.lock" }}
          paths:
            - node_modules/

      - attach_workspace:
          at: .

      - run:
          name: Deploying Lambdas
          command: yarn run serverless deploy -v

  build-frontend:
    docker:
      - image: circleci/node:10

    working_directory: ~/repo/frontend

    environment:
      TERM: dumb

    steps:
      - checkout:
          path: ~/repo

      - *skip-job-if-frontend-unchanged

      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - yarn-packages-frontend-{{ .Branch }}-{{ checksum "yarn.lock" }}
            - yarn-packages-frontend-{{ .Branch }}
            - yarn-packages-frontend-master

      - run: yarn install

      - save_cache:
          name: Save Yarn Package Cache
          key: yarn-packages-frontend-{{ .Branch }}-{{ checksum "yarn.lock" }}
          paths:
            - node_modules/

      - run: yarn run webpack

      - persist_to_workspace:
          root: .
          paths:
            - site

  deploy-frontend:
    docker:
      - image: circleci/node:10

    working_directory: ~/repo/frontend

    environment:
      TERM: dumb

    steps:
      - checkout:
          path: ~/repo

      - *skip-job-if-frontend-unchanged

      - attach_workspace:
          at: .

      - run:
          name: Deploying Frontend
          command: ./scripts/deploy-gh-pages.sh


workflows:
  version: 2
  build-deploy:
    jobs:
      - test-event-store
      - build-lambdas
      - deploy-lambdas:
          requires:
            - test-event-store
            - build-lambdas
          filters:
            branches:
              only: master
      - build-frontend
      - deploy-frontend:
          requires:
            - build-frontend
            - deploy-lambdas
          filters:
            branches:
              only: master

