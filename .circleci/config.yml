# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build-lambdas:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "build.gradle" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: gradle dependencies

      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}

      # run tests!
      - run: gradle build

      - persist_to_workspace:
          root: .
          paths:
            - lambda/build/distributions

  deploy-lambdas:
    docker:
      - image: circleci/node:10

    working_directory: ~/repo

    environment:
      TERM: dumb

    steps:
      - checkout

      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - yarn-packages-{{ .Branch }}-{{ checksum "yarn.lock" }}
            - yarn-packages-{{ .Branch }}
            - yarn-packages-master
            - yarn-packages-

      - run:
          name: Install Dependencies
          command: yarn install

      - save_cache:
          name: Save Yarn Package Cache
          key: yarn-packages-{{ .Branch }}-{{ checksum "yarn.lock" }}
          paths:
            - node_modules/

      - attach_workspace:
          at: .

      - run:
          name: Deploying Lambdas
          command: yarn run serverless deploy -v

      - run:
          name: Deploying Frontend
          command: ./scripts/deploy-gh-pages.sh

  build-frontend:
    docker:
      - image: circleci/node:10

    working_directory: ~/repo

    environment:
      TERM: dumb

    steps:
      - checkout

      - persist_to_workspace:
          root: .
          paths:
            - frontend/site

  deploy-frontend:
    docker:
      - image: circleci/node:10

    working_directory: ~/repo

    environment:
      TERM: dumb

    steps:
      - checkout

      - attach_workspace:
          at: .

      - run:
          name: Deploying Frontend
          command: ./scripts/deploy-gh-pages.sh


workflows:
  version: 2
  build-deploy:
    jobs:
      - build-lambdas
      - deploy-lambdas:
          requires:
            - build-lambdas
          filters:
            branches:
              only: master
      - build-frontend
      - deploy-frontend:
          requires:
            - build-frontend
            - deploy-lambdas
          filters:
            branches:
              only: master

